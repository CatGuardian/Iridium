{"version":3,"sources":["lib/Instance.ts"],"names":["Instance","Instance.constructor","Instance.document","Instance.save","Instance.update","Instance.refresh","Instance.delete","Instance.remove","Instance.first","Instance.select","Instance.toJSON","Instance.toString"],"mappings":"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C5BA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,CAACA;gBAC5BA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;QACHA,CAACA,CAACA,CAACA,IAAIA,CAACA,UAACA,OAAgBA;YACzBA,UAAUA,GAAGA,EAAEA,GAAGA,EAAEA,KAAIA,CAACA,SAASA,CAACA,GAAGA,EAAEA,CAACA;YACzCA,EAAEA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA;gBACXA,MAAMA,CAACA,CAACA,CAACA,SAASA,CAACA,KAAIA,CAACA,SAASA,CAACA,CAACA;YACvCA,CAACA;YAEDA,MAAMA,CAACA,IAAIA,QAAQA,CAAYA,UAACA,OAAOA,EAAEA,MAAMA;gBAC3CA,KAAIA,CAACA,MAAMA,CAACA,UAAUA,CAACA,OAAOA,CAACA,UAAUA,EAACA,UAACA,GAAUA,EAAEA,MAAMA;oBACzDA,EAAEA,CAACA,CAACA,GAAGA,CAACA;wBAACA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;oBAC5BA,MAAMA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;gBAC3BA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA,IAAIA,CAACA,UAACA,MAAiBA;YACtBA,MAAMA,CAACA,KAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,gBAAgBA,CAACA,UAAUA,EAAEA,MAAMA,EAACA,UAACA,KAAKA;gBAClEA,KAAIA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;gBACxBA,KAAIA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;gBACpBA,KAAIA,CAACA,SAASA,GAAGA,KAAKA,CAACA;gBACvBA,KAAIA,CAACA,SAASA,GAAGA,CAACA,CAACA,KAAKA,CAAYA,KAAKA,CAACA,CAACA;gBAC3CA,MAAMA,CAAiBA,KAAIA,CAACA;YAChCA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA,OAAOA,CAACA,QAAQA,CAACA,CAACA;IACzBA,CAACA;IAEDH;;;;O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","file":"lib/Instance.js","sourcesContent":["/// <reference path=\"../_references.d.ts\" />\r\nimport Core from './Core';\r\nimport Model from './Model';\r\nimport {Plugin} from './Plugins';\r\nimport {CacheDirector} from './CacheDirector';\r\nimport * as General from './General';\r\nimport * as ModelInterfaces from './ModelInterfaces';\r\nimport * as Index from './Index';\r\n\r\nimport _ = require('lodash');\r\nimport Bluebird = require('bluebird');\r\n\r\nexport default class Instance<TDocument extends { _id?: any }, TInstance> {\r\n    /**\r\n     * Creates a new instance which represents the given document as a type of model\r\n     * @param {model.Model} model The model that the document represents\r\n     * @param {TSchema} document The document which should be wrapped by this instance\r\n     * @param {Boolean} isNew Whether the document is new (doesn't exist in the database) or not\r\n     * @param {Boolean} isPartial Whether the document has only a subset of its fields populated\r\n     * @description\r\n     * This class will be subclassed automatically by Iridium to create a model specific instance\r\n     * which takes advantage of some of v8's optimizations to boost performance significantly.\r\n     * The instance returned by the model, and all of this instance's methods, will be of type\r\n     * TInstance - which should represent the merger of TSchema and IInstance for best results.\r\n     */\r\n    constructor(model: Model<TDocument, TInstance>, document: TDocument, isNew: boolean = true, isPartial: boolean = false) {\r\n        this._model = model;\r\n\r\n        this._isNew = !!isNew;\r\n        this._isPartial = isPartial;\r\n        this._original = document;\r\n        this._modified = _.cloneDeep<TDocument>(document);\r\n\r\n        _.each(model.core.plugins,(plugin: Plugin) => {\r\n            if (plugin.newInstance) plugin.newInstance(this, model);\r\n        });\r\n    }\r\n\r\n    private _isNew: boolean;\r\n    private _isPartial: boolean;\r\n    private _model: Model<TDocument, TInstance>;\r\n    private _original: TDocument;\r\n    private _modified: TDocument;\r\n\r\n    /**\r\n     * Gets the underlying document representation of this instance\r\n     */\r\n    get document(): TDocument {\r\n        return this._modified;\r\n    }\r\n\r\n    [name: string]: any;\r\n\r\n    static onCreating: (document: { _id?: any }) => void;\r\n    static onRetrieved: (document: { _id?: any }) => void;\r\n    static onReady: (instance: Instance<{ _id?: any }, Instance<{ _id?: any }, any>>) => void;\r\n    static onSaving: (instance: Instance<{ _id?: any }, Instance<{ _id?: any }, any>>, changes: any) => void;\r\n    \r\n    static validators: Skmatc.Validator[];\r\n    static cache: CacheDirector;\r\n    static indexes: (Index.Index | Index.IndexSpecification)[];\r\n    static identifier: {\r\n        apply(fromSource: any): any;\r\n        reverse(toSource: any): any;\r\n    };\r\n    \r\n    /**\r\n     * Saves any changes to this instance, using the built in diff algorithm to write the update query.\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the save operation completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    save(callback?: General.Callback<TInstance>): Bluebird<TInstance>;\r\n    /**\r\n     * Saves the given changes to this instance and updates the instance to match the latest database document.\r\n     * @param {Object} changes The MongoDB changes object to be used when updating this instance\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the save operation completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    save(changes: Object, callback?: General.Callback<TInstance>): Bluebird<TInstance>;\r\n    /**\r\n     * Saves the given changes to this instance and updates the instance to match the latest database document.\r\n     * @param {Object} conditions The conditions under which the update will take place - these will be merged with an _id query\r\n     * @param {Object} changes The MongoDB changes object to be used when updating this instance\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the save operation completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    save(conditions: Object, changes: Object, callback?: General.Callback<TInstance>): Bluebird<TInstance>;\r\n    save(...args: any[]): Bluebird<TInstance> {\r\n        var callback: General.Callback<any> = null;\r\n        var changes: any = null;\r\n        var conditions: any = {};\r\n\r\n        Array.prototype.slice.call(args, 0).reverse().forEach((arg) => {\r\n            if (typeof arg == 'function') callback = arg;\r\n            else if (typeof arg == 'object') {\r\n                if (!changes) changes = arg;\r\n                else conditions = arg;\r\n            }\r\n        });\r\n\r\n        return Bluebird.resolve().then(() => {\r\n            _.merge(conditions, { _id: this._modified._id });\r\n            \r\n            if (!changes) {\r\n                var validation = this._model.helpers.validate(this._modified);\r\n                if (validation.failed) return Bluebird.reject(validation.error).bind(this).nodeify(callback);\r\n\r\n                var original = _.cloneDeep(this._original);\r\n                var modified = _.cloneDeep(this._modified);\r\n\r\n                changes = this._model.helpers.diff(original, modified);\r\n            }\r\n\r\n            if (!_.keys(changes).length) return null;\r\n\r\n            return changes;\r\n        }).then((changes) => {\r\n            if (!changes && !this._isNew) return changes;\r\n            return this._model.handlers.savingDocument(<TInstance><any>this, changes).then(() => changes);\r\n        }).then((changes) => {\r\n            if (!changes && !this._isNew) return false;\r\n\r\n            if (this._isNew) return new Bluebird<boolean>((resolve, reject) => {\r\n                this._model.collection.insertOne(this._modified, { w: 'majority' },(err, doc) => {\r\n                    if (err) return reject(err);\r\n                    return resolve(<any>!!doc);\r\n                });\r\n            });\r\n\r\n            return new Bluebird<boolean>((resolve: (changed: boolean) => void, reject) => {\r\n                this._model.collection.updateOne(conditions, changes, { w: 'majority' },(err: Error, changed: boolean) => {\r\n                    if (err) return reject(err);\r\n                    return resolve(changed);\r\n                });\r\n            });\r\n            }).then((changed: boolean) => {\r\n            conditions = { _id: this._modified._id };\r\n            if (!changed) {\r\n                return _.cloneDeep(this._modified);\r\n            }\r\n\r\n            return new Bluebird<TDocument>((resolve, reject) => {\r\n                this._model.collection.findOne(conditions,(err: Error, latest) => {\r\n                    if (err) return reject(err);\r\n                    return resolve(latest);\r\n                });\r\n            });\r\n        }).then((latest: TDocument) => {\r\n            return this._model.handlers.documentReceived(conditions, latest,(value) => {\r\n                this._isPartial = false;\r\n                this._isNew = false;\r\n                this._original = value;\r\n                this._modified = _.clone<TDocument>(value);\r\n                return <TInstance><any>this;\r\n            });\r\n        }).nodeify(callback);\r\n    }\r\n\r\n    /**\r\n     * Updates this instance to match the latest document available in the backing collection\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the update completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    update(callback?: General.Callback<TInstance>): Bluebird<TInstance> {\r\n        return this.refresh(callback);\r\n    }\r\n\r\n    /**\r\n     * Updates this instance to match the latest document available in the backing collection\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the update completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    refresh(callback?: General.Callback<TInstance>): Bluebird<TInstance> {\r\n        var conditions = { _id: this._original._id };\r\n\r\n        return Bluebird.resolve().then(() => {\r\n            return new Bluebird<TDocument>((resolve, reject) => {\r\n                this._model.collection.findOne(conditions,(err: Error, doc: any) => {\r\n                    if (err) return reject(err);\r\n                    return resolve(doc);\r\n                });\r\n            });\r\n        }).then((newDocument) => {\r\n            if (!newDocument) {\r\n                this._isPartial = true;\r\n                this._isNew = true;\r\n                this._original = _.cloneDeep<TDocument>(this._modified);\r\n                return <Bluebird<TInstance>><any>this;\r\n            }\r\n\r\n            return this._model.handlers.documentReceived(conditions, newDocument, (doc) => {\r\n                this._isNew = false;\r\n                this._isPartial = false;\r\n                this._original = doc;\r\n                this._modified = _.cloneDeep<TDocument>(doc);\r\n\r\n                return <TInstance><any>this;\r\n            });\r\n        }).nodeify(callback);\r\n    }\r\n\r\n    /**\r\n     * Removes this instance's document from the backing collection\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the operation completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    delete(callback?: General.Callback<TInstance>): Bluebird<TInstance> {\r\n        return this.remove(callback);\r\n    }\r\n\r\n    /**\r\n     * Removes this instance's document from the backing collection\r\n     * @param {function(Error, IInstance)} callback A callback which is triggered when the operation completes\r\n     * @returns {Promise<TInstance>}\r\n     */\r\n    remove(callback?: General.Callback<TInstance>): Bluebird<TInstance> {\r\n        var conditions = { _id: this._original._id };\r\n\r\n        return Bluebird.resolve().then(() => {\r\n            if (this._isNew) return 0;\r\n            return new Bluebird<number>((resolve, reject) => {\r\n                this._model.collection.remove(conditions, { w: 'majority' },(err: Error, removed?: any) => {\r\n                    if (err) return reject(err);\r\n                    return resolve(removed);\r\n                });\r\n            });\r\n        }).then((removed) => {\r\n            if (removed) return this._model.cache.clear(conditions);\r\n            return false;\r\n        }).then((removed) => {\r\n            this._isNew = true;\r\n            return <TInstance><any>this;\r\n        }).nodeify(callback);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the first element in an enumerable collection which matches the predicate\r\n     * @param {any[]} collection The collection from which to retrieve the element\r\n     * @param {function(any, Number): Boolean} predicate The function which determines whether to select an element\r\n     * @returns {any}\r\n     */\r\n    first<T>(collection: T[], predicate: General.Predicate<T>): T;\r\n    /**\r\n     * Retrieves the first element in an enumerable collection which matches the predicate\r\n     * @param {Object} collection The collection from which to retrieve the element\r\n     * @param {function(any, String): Boolean} predicate The function which determines whether to select an element\r\n     * @returns {any}\r\n     */\r\n    first<T>(collection: { [key: string]: T }, predicate: General.Predicate<T>): T;\r\n    first<T>(collection: T[]| { [key: string]: T }, predicate: General.Predicate<T>): T {\r\n        var result = null;\r\n\r\n        _.each(collection,(value: T, key) => {\r\n            if (predicate.call(this, value, key)) {\r\n                result = value;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Retrieves a number of elements from an enumerable collection which match the predicate\r\n     * @param {any[]} collection The collection from which elements will be plucked\r\n     * @param {function(any, Number): Boolean} predicate The function which determines the elements to be plucked\r\n     * @returns {any[]}\r\n     */\r\n    select<T>(collection: T[], predicate: General.Predicate<T>): T[];\r\n    /**\r\n     * Retrieves a number of elements from an enumerable collection which match the predicate\r\n     * @param {Object} collection The collection from which elements will be plucked\r\n     * @param {function(any, String): Boolean} predicate The function which determines the elements to be plucked\r\n     * @returns {Object}\r\n     */\r\n    select<T>(collection: { [key: string]: T }, predicate: General.Predicate<T>): { [key: string]: T };\r\n    select<T>(collection: T[]| { [key: string]: T }, predicate: General.Predicate<T>): any {\r\n        var isArray = Array.isArray(collection);\r\n        var results: any = isArray ? [] : {};\r\n\r\n        _.each(collection,(value: T, key) => {\r\n            if (predicate.call(this, value, key)) {\r\n                if (isArray) results.push(value);\r\n                else results[key] = value;\r\n            }\r\n        });\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Gets the JSON representation of this instance\r\n     * @returns {TDocument}\r\n     */\r\n    toJSON(): any {\r\n        return this.document;\r\n    }\r\n\r\n    /**\r\n     * Gets a string representation of this instance\r\n     * @returns {String}\r\n     */\r\n    toString(): string {\r\n        return JSON.stringify(this.document, null, 2);\r\n    }\r\n}"],"sourceRoot":"/source/"}
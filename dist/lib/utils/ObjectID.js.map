{"version":3,"sources":["lib/utils/ObjectID.ts"],"names":[],"mappings":";AAAA,IAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AAEnC;;;;;;;;;;;;GAYG;AACH,oBAA2B,KAAa;IACvC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACpD,CAAC;AAFe,kBAAU,aAEzB,CAAA","file":"lib/utils/ObjectID.js","sourcesContent":["import * as MongoDB from \"mongodb\";\r\n\r\n/**\r\n * Converts a string to an ObjectID instance - a shortcut for require(\"mongodb\").ObjectID.createFromHexString\r\n *\r\n * @param value The string representation of the ObjectID you wish to create.\r\n * @returns A MongoDB ObjectID instance equivalent to the string you provided.\r\n *\r\n * You should be aware that this method performs no validation on the received string, MongoDB's ObjectID requires\r\n * that it either be a 12 byte UTF8 string, or a 24 byte hexadecimal string in order to be converted correctly.\r\n *\r\n * This method removes the need for your application to directly depend on MongoDB's Node.js client library,\r\n * which helps clean up your code a bit and reduces the headache of maintaining two different versions of the\r\n * library (since Iridium also has one).\r\n */\r\nexport function toObjectID(value: string): MongoDB.ObjectID {\r\n\treturn MongoDB.ObjectID.createFromHexString(value);\r\n}"],"sourceRoot":"/source/"}
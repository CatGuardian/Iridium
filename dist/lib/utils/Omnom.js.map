{"version":3,"sources":["lib/utils/Omnom.ts"],"names":["Omnom","Omnom.constructor","Omnom.changes","Omnom.diff","Omnom.onObject","Omnom.onArray","Omnom.set","Omnom.unset","Omnom.inc","Omnom.push","Omnom.pull","Omnom.pullAll","Omnom.resolve","Omnom.almostEqual"],"mappings":"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","file":"lib/utils/Omnom.js","sourcesContent":["/// <reference path=\"../../_references.d.ts\" />\r\nimport _ = require('lodash');\r\nimport MongoDB = require('mongodb');\r\n\r\nexport default class Omnom {\r\n    constructor(public options: {\r\n        atomicNumbers?: boolean;\r\n    } = {}) {\r\n        this._changes = {};\r\n    }\r\n\r\n    private _changes: {\r\n        $set?: any;\r\n        $unset?: any;\r\n        $inc?: any;\r\n        $push?: any;\r\n        $pull?: any;\r\n        $pullAll?: any;\r\n    };\r\n    get changes(): {\r\n        $set?: any;\r\n        $unset?: any;\r\n        $inc?: any;\r\n        $push?: any;\r\n        $pull?: any;\r\n        $pullAll?: any;\r\n    } {\r\n        return this._changes;\r\n    }\r\n\r\n    diff(original: number, modified: number): Omnom;\r\n    diff(original: [any], modified: any[]): Omnom;\r\n    diff(original: MongoDB.ObjectID, modified: MongoDB.ObjectID): Omnom;\r\n    diff(original: Object, modified: Object): Omnom;\r\n    diff(original: any, modified: any): Omnom {\r\n        this.onObject(original, modified);\r\n        return this;\r\n    }\r\n\r\n    static diff(original: number, modified: number, options?: {\r\n        atomicNumbers?: boolean;\r\n    });\r\n    static diff(original: [any], modified: any[], options?: {\r\n        atomicNumbers?: boolean;\r\n    });\r\n    static diff(original: MongoDB.ObjectID, modified: MongoDB.ObjectID, options?: {\r\n        atomicNumbers?: boolean;\r\n    });\r\n    static diff(original: Object, modified: Object, options?: {\r\n        atomicNumbers?: boolean;\r\n    });\r\n    static diff(original: any, modified: any, options?: {\r\n        atomicNumbers?: boolean;\r\n    }) {\r\n        return new Omnom(options).diff(original, modified).changes;\r\n    }\r\n\r\n    private onObject(original: number, modified: number, changePath?: string);\r\n    private onObject(original: [any], modified: any[], changePath?: string);\r\n    private onObject(original: MongoDB.ObjectID, modified: MongoDB.ObjectID, changePath?: string);\r\n    private onObject(original: Object, modified: Object, changePath?: string);\r\n    private onObject(original: any, modified: any, changePath?: string) {\r\n        if (original === undefined || original === null)\r\n            return (original !== modified) && this.set(changePath, modified);\r\n\r\n        if (typeof original == 'number' && typeof modified == 'number' && original !== modified) {\r\n            if (this.options.atomicNumbers) return this.inc(changePath, modified - original);\r\n            return this.set(changePath, modified);\r\n        }\r\n\r\n        if (Array.isArray(original) && Array.isArray(modified))\r\n            return this.onArray(original, modified, changePath);\r\n\r\n        if (original instanceof MongoDB.ObjectID && modified instanceof MongoDB.ObjectID)\r\n            return !original.equals(modified) && this.set(changePath, modified);\r\n\r\n        if (!_.isPlainObject(original) || !_.isPlainObject(modified))\r\n            return !_.isEqual(original, modified) && this.set(changePath, modified);\r\n\r\n        _.each(modified, function (value, key) {\r\n            // Handle array diffs in their own special way\r\n            if (Array.isArray(value) && Array.isArray(original[key])) this.onArray(original[key], value, this.resolve(changePath, key));\r\n\r\n            // Otherwise, just keep going\r\n            else this.onObject(original[key], value, this.resolve(changePath, key));\r\n        }, this);\r\n\r\n        // Unset removed properties\r\n        _.each(original, function (value, key) {\r\n            if (modified[key] === undefined || modified[key] === null) return this.unset(this.resolve(changePath, key));\r\n        }, this);\r\n    }\r\n\r\n    private onArray(original: [any], modified: [any], changePath: string) {\r\n        var i, j;\r\n\r\n        // Check if we can get from original => modified using just pulls\r\n        if (original.length > modified.length) {\r\n            var pulls = [];\r\n            for (i = 0, j = 0; i < original.length && j < modified.length; i++) {\r\n                if (this.almostEqual(original[i], modified[j])) j++;\r\n                else pulls.push(original[i]);\r\n            }\r\n\r\n            for (; i < original.length; i++)\r\n                pulls.push(original[i]);\r\n\r\n            if (j === modified.length) {\r\n                if (pulls.length === 1) return this.pull(changePath, pulls[0]);\r\n                // We can complete using just pulls\r\n                return pulls.forEach((pull) => this.pull(changePath, pull));\r\n            }\r\n\r\n            // If we have a smaller target array than our source, we will need to re-create it\r\n            // regardless (if we want to do so in a single operation anyway)\r\n            else return this.set(changePath, modified);\r\n        }\r\n\r\n        // Check if we can get from original => modified using just pushes\r\n        if (original.length < modified.length) {\r\n            var canPush = true;\r\n            for (i = 0; i < original.length; i++)\r\n                if (this.almostEqual(original[i], modified[i]) < 1) {\r\n                    canPush = false;\r\n                    break;\r\n                }\r\n\r\n            if (canPush) {\r\n                for (i = original.length; i < modified.length; i++)\r\n                    this.push(changePath, modified[i]);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Otherwise, we need to use $set to generate the new array\r\n\r\n        // Check how many manipulations would need to be performed, if it's more than half the array size\r\n        // then rather re-create the array\r\n\r\n        var sets = [];\r\n        var partials = [];\r\n        for (i = 0; i < modified.length; i++) {\r\n            var equality = this.almostEqual(original[i], modified[i]);\r\n            if (equality === 0) sets.push(i);\r\n            else if (equality < 1) partials.push(i);\r\n        }\r\n\r\n        if (sets.length > modified.length / 2)\r\n            return this.set(changePath, modified);\r\n\r\n        for (i = 0; i < sets.length; i++)\r\n            this.set(this.resolve(changePath, sets[i].toString()), modified[sets[i]]);\r\n\r\n        for (i = 0; i < partials.length; i++)\r\n            this.onObject(original[partials[i]], modified[partials[i]], this.resolve(changePath, partials[i].toString()));\r\n    }\r\n\r\n    private set(path: string, value: any) {\r\n        if (!this.changes.$set)\r\n            this.changes.$set = {};\r\n\r\n        this.changes.$set[path] = value;\r\n    }\r\n\r\n    private unset(path: string) {\r\n        if (!this.changes.$unset)\r\n            this.changes.$unset = {};\r\n\r\n        this.changes.$unset[path] = 1;\r\n    }\r\n\r\n    private inc(path: string, value: number) {\r\n        if (!this.changes.$inc)\r\n            this.changes.$inc = {};\r\n\r\n        this.changes.$inc[path] = value;\r\n    }\r\n\r\n    private push(path: string, value: any) {\r\n        if (!this.changes.$push)\r\n            this.changes.$push = {};\r\n\r\n        if (this.changes.$push[path]) {\r\n            if (this.changes.$push[path].$each)\r\n                this.changes.$push[path].$each.push(value);\r\n            else\r\n                this.changes.$push[path] = { $each: [this.changes.$push[path], value] };\r\n        } else this.changes.$push[path] = value;\r\n    }\r\n\r\n    private pull(path: string, value: any) {\r\n        if (!this.changes.$pull)\r\n            this.changes.$pull = {};\r\n\r\n        if (this.changes.$pullAll && this.changes.$pullAll[path]) {\r\n            return this.changes.$pullAll[path].push(value);\r\n        }\r\n\r\n        if (this.changes.$pull[path]) {\r\n            this.pullAll(path, [this.changes.$pull[path], value]);\r\n            delete this.changes.$pull[path];\r\n            if (_.keys(this.changes.$pull).length === 0)\r\n                delete this.changes.$pull;\r\n            return;\r\n        }\r\n\r\n        this.changes.$pull[path] = value;\r\n    }\r\n\r\n    private pullAll(path: string, values: any[]) {\r\n        if (!this.changes.$pullAll)\r\n            this.changes.$pullAll = {};\r\n\r\n        this.changes.$pullAll[path] = values;\r\n    }\r\n\r\n    private resolve(...args) {\r\n        var validArguments = [];\r\n        args.forEach(function (arg) {\r\n            if (arg) validArguments.push(arg);\r\n        });\r\n        return validArguments.join('.');\r\n    }\r\n\r\n    private almostEqual(o1: Object, o2: Object);\r\n    private almostEqual(o1: any, o2: any) {\r\n        if (!_.isPlainObject(o1) || !_.isPlainObject(o2)) return o1 == o2 ? 1 : 0;\r\n\r\n        var o1i, o1k = Object.keys(o1);\r\n        var o2k = Object.keys(o2);\r\n\r\n        var commonKeys = [];\r\n        for (o1i = 0; o1i < o1k.length; o1i++)\r\n            if (~o2k.indexOf(o1k[o1i])) commonKeys.push(o1k[o1i]);\r\n\r\n        var totalKeys = o1k.length + o2k.length - commonKeys.length;\r\n        var keysDifference = totalKeys - commonKeys.length;\r\n\r\n        var requiredChanges = 0;\r\n        for (var i = 0; i < commonKeys.length; i++)\r\n            if (this.almostEqual(o1[commonKeys[i]], o2[commonKeys[i]]) < 1) requiredChanges++;\r\n\r\n        return 1 - (keysDifference / totalKeys) - (requiredChanges / commonKeys.length);\r\n    }\r\n}"],"sourceRoot":"/source/"}
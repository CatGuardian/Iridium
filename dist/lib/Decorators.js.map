{"version":3,"sources":["lib/Decorators.ts"],"names":["Collection","Index","Validate","Property","Transform","ObjectID"],"mappings":"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","file":"lib/Decorators.js","sourcesContent":["/// <reference path=\"../_references.d.ts\" />\r\nimport MongoDB = require('mongodb');\r\nimport _ = require('lodash');\r\nimport skmatc = require('skmatc');\r\nimport Instance from './Instance';\r\nimport {Index, IndexSpecification} from './Index';\r\nimport {Schema} from './Schema';\r\nimport InstanceImplementation from './InstanceInterface';\r\n\r\nexport function Collection(name: string) {\r\n\treturn function(target: InstanceImplementation<any, any>) {\r\n\t\ttarget.collection = name;\r\n\t};\r\n}\r\n\r\nexport function Index(spec: IndexSpecification, options?: MongoDB.IndexOptions) {\r\n\treturn function(target: InstanceImplementation<any,any>) {\r\n\t\ttarget.indexes = (target.indexes || []).concat(<Index>{ spec: spec, options: options || {} });\r\n\t}\r\n}\r\n\r\nexport function Validate(forType: any, validate: (schema: any, data: any, path: string) => Skmatc.Result) {\r\n\treturn function(target: InstanceImplementation<any,any>) {\r\n\t\ttarget.validators = (target.validators || []).concat(skmatc.create(schema => schema === forType, validate));\r\n\t}\r\n}\r\n\r\nexport function Property(asType: any, required?: boolean): (target: { constructor: Function }, name: string) => void;\r\nexport function Property(name: string, asType: any, required?: boolean): (target: Function) => void;\r\nexport function Property(...args: any[]): (target: any, name?: string) => void {\r\n\tlet name = null,\r\n\t\tasType = false,\r\n\t\trequired = true;\r\n\t\r\n\tif (args.length > 1 && typeof args[args.length - 1] === 'boolean')\r\n\t\trequired = args.pop();\r\n\t\r\n\treturn function(target: any, property?: string) {\r\n\t\tif (!property) name = args.shift();\r\n\t\telse {\r\n\t\t\tname = property;\r\n\t\t\ttarget = target.constructor;\r\n\t\t}\r\n\t\tasType = args.pop() || false;\r\n\t\t\r\n\t\ttarget.schema = _.clone(target.schema || {});\r\n\t\tif(!required && typeof asType !== 'boolean') target.schema[name] = { $required: required, $type: asType };\r\n\t\telse target.schema[name] = asType;\r\n\t}\r\n}\r\n\r\nexport function Transform(fromDB: (value: any) => any, toDB: (value: any) => any) {\r\n\treturn function(target: any, property: string) {\r\n\t\ttarget.constructor.transforms = _.clone(target.constructor.transforms || {})\r\n\t\ttarget.constructor.transforms[property] = {\r\n\t\t\tfromDB: fromDB,\r\n\t\t\ttoDB: toDB\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport function ObjectID(target: { constructor: typeof Instance }, name: string) {\r\n\ttarget.constructor.schema = <Schema>_.clone(target.constructor.schema || {});\r\n\ttarget.constructor.schema[name] = MongoDB.ObjectID;\r\n\ttarget.constructor.transforms[name] = {\r\n        fromDB: value => value._bsontype == 'ObjectID' ? new MongoDB.ObjectID(value.id).toHexString() : value,\r\n        toDB: value => value && typeof value === 'string' ? new MongoDB.ObjectID(value) : value\r\n    };\r\n}"],"sourceRoot":"/source/"}
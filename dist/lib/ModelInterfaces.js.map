{"version":3,"sources":["lib/ModelInterfaces.ts"],"names":[],"mappings":"AA6CC","file":"lib/ModelInterfaces.js","sourcesContent":["/// <reference path=\"../_references.d.ts\" />\r\nimport Iridium from './Core';\r\nimport {Schema} from './Schema';\r\nimport MongoDB = require('mongodb');\r\nimport Model from './Model';\r\nimport ModelCache from './ModelCache';\r\nimport {CacheDirector} from './CacheDirector';\r\nimport {Hooks} from './Hooks';\r\nimport * as ModelOptions from './ModelOptions';\r\nimport * as Index from './Index';\r\n\r\nexport interface IModelBase {\r\n    collection: MongoDB.Collection;\r\n    collectionName: string;\r\n    core: Iridium;\r\n    schema: Schema;\r\n    cache: ModelCache;\r\n    cacheDirector: CacheDirector;\r\n}\r\n\r\nexport interface IModel<TDocument extends { _id?: any }, TInstance> extends IModelBase {\r\n    Instance: new (doc: TDocument, isNew?: boolean, isPartial?: boolean) => TInstance;\r\n}\r\n\r\nexport interface InstanceImplementation<TDocument extends { _id?: any }, TInstance> extends Hooks<TDocument, TInstance> {\r\n    new (model: Model<TDocument, TInstance>, doc: TDocument, isNew?: boolean, isPartial?: boolean): TInstance;\r\n    \r\n    collection: string;\r\n    schema: Schema;\r\n    indexes?: (Index.Index | Index.IndexSpecification)[];\r\n\r\n    cache?: CacheDirector;\r\n    validators?: Skmatc.Validator[];\r\n    identifier?: {\r\n        apply(fromSource: any): any;\r\n        reverse(toSource: any): any;\r\n    };\r\n}\r\n\r\nexport interface InstanceCreator<TDocument extends { _id?: any }, TInstance> {\r\n    (model: Model<TDocument, TInstance>, doc: TDocument, isNew?: boolean, isPartial?: boolean): TInstance;\r\n}\r\n\r\nexport interface ModelSpecificInstanceConstructor<TDocument extends { _id?: any }, TInstance> {\r\n    new (doc: TDocument, isNew?: boolean, isPartial?: boolean): TInstance;\r\n}"],"sourceRoot":"/source/"}
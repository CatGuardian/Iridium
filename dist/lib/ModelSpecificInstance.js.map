{"version":3,"sources":["lib/ModelSpecificInstance.ts"],"names":[],"mappings":";AAGA,IAAO,IAAI,WAAW,MAAM,CAAC,CAAC;AAC9B,IAAO,CAAC,WAAW,QAAQ,CAAC,CAAC;AAE7B;;;;;;;;;;;GAWG;AACH,+BAAkF,KAAkC,EAAE,YAA0D;IAC5K,IAAI,WAAW,GAAG,UAAU,GAAc,EAAE,KAAe,EAAE,SAAmB;QAC5E,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAEzC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC,UAAC,QAAQ;QACtC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE;gBAC1D,GAAG,EAAE;oBACD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACxF,CAAC;gBACD,GAAG,EAAE,UAAU,KAAK;oBAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACvF,CAAC;gBACD,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,IAAI;aACrB,CAAC,CAAC;QACP,CAAC;QAED,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE;YACnD,GAAG,EAAE;gBACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACpC,CAAC;YACD,GAAG,EAAE,UAAU,KAAK;gBAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YACrC,CAAC;YACD,UAAU,EAAE,IAAI;SACnB,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,MAAM,CAAM,WAAW,CAAC;AAC5B,CAAC;AAjCe,6BAAqB,wBAiCpC,CAAA","file":"lib/ModelSpecificInstance.js","sourcesContent":["import {Model} from './Model';\r\nimport {InstanceImplementation} from './InstanceInterface';\r\nimport {ModelSpecificInstanceConstructor} from './ModelInterfaces';\r\nimport util = require('util');\r\nimport _ = require('lodash');\r\n\r\n/**\r\n * Creates a new subclass of the given instanceType which correctly performs property transforms\r\n * and associates the instance with the correct model when instantiated.\r\n *\r\n * @param TDocument The interface representing the structure of the documents found in the database.\r\n * @param TInstance The interface or class representing the documents after they have been wrapped in an instance.\r\n *\r\n * @param model The model which instances should be associated with when the resulting constructor is used.\r\n * @param instanceType The constructor used to create new instances of type TInstance.\r\n *\r\n * @internal\r\n */\r\nexport function ModelSpecificInstance<TDocument extends { _id?: any }, TInstance>(model: Model<TDocument, TInstance>, instanceType: InstanceImplementation<TDocument, TInstance>): ModelSpecificInstanceConstructor<TDocument, TInstance> {\r\n    let constructor = function (doc: TDocument, isNew?: boolean, isPartial?: boolean) {\r\n        instanceType.call(this, model, doc, isNew, isPartial);\r\n    };\r\n\r\n    util.inherits(constructor, instanceType);\r\n\r\n    _.each(Object.keys(model.schema),(property) => {\r\n        if (model.transforms.hasOwnProperty(property)) {\r\n            return Object.defineProperty(constructor.prototype, property, {\r\n                get: function () {\r\n                    return model.transforms[property].fromDB(this._modified[property], property, model);\r\n                },\r\n                set: function (value) {\r\n                    this._modified[property] = model.transforms[property].toDB(value, property, model);\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(constructor.prototype, property, {\r\n            get: function () {\r\n                return this._modified[property];\r\n            },\r\n            set: function (value) {\r\n                this._modified[property] = value;\r\n            },\r\n            enumerable: true\r\n        });\r\n    });\r\n\r\n    return <any>constructor;\r\n}\r\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["lib/InstanceInterface.ts"],"names":[],"mappings":"AAwBC","file":"lib/InstanceInterface.js","sourcesContent":["/// <reference path=\"../_references.d.ts\" />\r\nimport Iridium from './Core';\r\nimport {Schema} from './Schema';\r\nimport Model from './Model';\r\nimport * as Index from './Index';\r\nimport {CacheDirector} from './CacheDirector';\r\n\r\nexport default InstanceImplementation;\r\n\r\ninterface InstanceImplementation<TDocument extends { _id ?: any }, TInstance> {\r\n    new (model: Model<TDocument, TInstance>, doc: TDocument, isNew?: boolean, isPartial?: boolean): TInstance;\r\n    \r\n    collection: string;\r\n    schema: Schema;\r\n    indexes?: (Index.Index | Index.IndexSpecification)[];\r\n    \r\n    onCreating? (document: TDocument): void;\r\n    onRetrieved? (document: TDocument): void;\r\n    onReady? (instance: TInstance): void;\r\n    onSaving? (instance: TInstance, changes: any): void;\r\n\r\n    cache?: CacheDirector;\r\n    validators?: Skmatc.Validator[];\r\n    transforms?: { [property: string]: { fromDB: (value: any) => any; toDB: (value: any) => any; } };\r\n}"],"sourceRoot":"/source/"}
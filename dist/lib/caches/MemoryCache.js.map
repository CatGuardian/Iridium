{"version":3,"sources":["lib/caches/MemoryCache.ts"],"names":["MemoryCache","MemoryCache.constructor","MemoryCache.set","MemoryCache.get","MemoryCache.clear"],"mappings":"AAAA,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AAGtC;;;;;GAKG;AACH;IAAAA;QACYC,UAAKA,GAAQA,EAAEA,CAACA;IAgB5BA,CAACA;IAdGD,yBAAGA,GAAHA,UAAOA,GAAWA,EAAEA,KAAQA;QACxBE,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,GAAGA,KAAKA,CAACA;QACxBA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;IACnCA,CAACA;IAEDF,yBAAGA,GAAHA,UAAOA,GAAWA;QACdG,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA;IAC7CA,CAACA;IAEDH,2BAAKA,GAALA,UAAMA,GAAWA;QACbI,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,cAAcA,CAACA,GAAGA,CAACA,CAACA;QACzCA,EAAEA,CAAAA,CAACA,GAAGA,CAACA;YAACA,OAAOA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA;QAC/BA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA;IACjCA,CAACA;IACLJ,kBAACA;AAADA,CAjBA,AAiBCA,IAAA;AAjBY,mBAAW,cAiBvB,CAAA","file":"lib/caches/MemoryCache.js","sourcesContent":["import Bluebird = require('bluebird');\r\nimport {Cache} from '../Cache';\r\n\r\n/**\r\n * A cache implementation which stores documents in an in-memory cache.\r\n *\r\n * Be aware that this is an incredibly simplistic implementation which doesn't manage\r\n * memory usage at all and is very likely NOT suitable for production use.\r\n */\r\nexport class MemoryCache implements Cache {\r\n    private cache: any = {};\r\n\r\n    set<T>(key: string, value: T): Bluebird<T> {\r\n        this.cache[key] = value;\r\n        return Bluebird.resolve(value);\r\n    }\r\n\r\n    get<T>(key: string): Bluebird<T> {\r\n        return Bluebird.resolve(this.cache[key]);\r\n    }\r\n\r\n    clear(key: string) : Bluebird<boolean> {\r\n        var has = this.cache.hasOwnProperty(key);\r\n        if(has) delete this.cache[key];\r\n        return Bluebird.resolve(has);\r\n    }\r\n}"],"sourceRoot":"/source/"}
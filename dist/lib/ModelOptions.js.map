{"version":3,"sources":["lib/ModelOptions.ts"],"names":[],"mappings":"AAgDC","file":"lib/ModelOptions.js","sourcesContent":["/// <reference path=\"../_references.d.ts\" />\r\nimport MongoDB = require('mongodb');\r\nimport Index = require('./Index');\r\nimport Hooks = require('./Hooks');\r\nimport {CacheDirector} from './CacheDirector';\r\nimport * as General from './General';\r\n\r\nexport interface QueryOptions {\r\n    cache?: boolean;\r\n    fields?: { [name: string]: number };\r\n    limit?: number;\r\n    skip?: number;\r\n    sort?: Index.IndexSpecification;\r\n}\r\n\r\nexport interface CreateOptions {\r\n    w?: any;\r\n    wtimeout?: number;\r\n    j?: number;\r\n    serializeFunctions?: boolean;\r\n    forceServerObjectId?: boolean;\r\n    upsert?: boolean;\r\n    cache?: boolean;\r\n}\r\n\r\nexport interface UpdateOptions {\r\n    w?: any;\r\n    wtimeout?: number;\r\n    j?: boolean;\r\n    upsert?: boolean;\r\n}\r\n\r\nexport interface RemoveOptions {\r\n    w?: any;\r\n    wtimeout?: number;\r\n    j?: boolean;\r\n    single?: boolean;\r\n}\r\n\r\nexport interface IModelOptions<TDocument, TInstance> {\r\n    validators?: Skmatc.Validator[];\r\n    cache?: CacheDirector;\r\n    indexes?: (Index.Index | Index.IndexSpecification)[];\r\n    properties?: { [key: string]: (General.PropertyGetter<any> | General.Property<any>) };\r\n    identifier?: {\r\n        apply(fromSource: any): any;\r\n        reverse(toSource: any): any;\r\n    };\r\n}"],"sourceRoot":"/source/"}